# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# ===== 项目特定配置 =====

# IDE 和编辑器文件
.vscode/
.idea/
*.swp
*.swo
*~

# 开发工具配置文件
.codex/
.cursor/
.windsurfrules

# 工作文件夹和项目数据（重要：这些包含用户数据）
TunnelNXWorkFolder/
WORKFOLDER

# 临时文件和缓存
work/
workspace/
temp/
tmp/
logs/
*/temp/
**/temp/

# 个人配置文件
config.ini
settings.json
*.config
.env.local
.env.*.local

# 缩略图和图像缓存（但保留 resources 中的资源文件）
*.thumbnail
*.thumb
thumbnails/
.thumbnails/
# 特定缩略图目录
TunnelNXWorkFolder/nodegraphs/thumbnails/
*/thumbnails/
**/thumbnails/

# 版本控制文件（项目特定）
*.tnxvc
TNXVC_files/
**/TNXVC_files/

# 自动保存和备份文件
*_auto_*.json
*.bak
*.backup
*.old
*.orig
*.save
*~

# 图像文件（但保留 resources 中的项目资源）
*.ico
*.bmp
*.tiff
*.tif
*.webp
*.svg
*.gif
*.jpg
*.jpeg
*.png
*.pdf
*.eps
*.ai
*.psd
# 但是保留 resources 目录中的所有文件
!resources/
!resources/**

# 数据文件
*.csv
*.xlsx
*.xls
*.json
*.xml
*.yaml
*.yml
# 但保留重要的项目配置文件
!resources/*.json
!resources/*.xml
!resources/*.yaml
!resources/*.yml
!*.py
!*.md
!*.txt

# 系统文件
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# 压缩文件
*.zip
*.rar
*.7z
*.tar
*.gz
*.bz2
*.xz

# 媒体文件（但保留 resources 中的资源）
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.mkv
*.mp3
*.wav
*.flac
*.aac

# 文档文件
*.doc
*.docx
*.ppt
*.pptx

# SSH 密钥文件
*.pub
123
123.pub

# 特定工作目录和临时文件夹
新建文件夹*/
draft/
drafts/
